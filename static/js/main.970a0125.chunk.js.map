{"version":3,"sources":["ParticleSystem.js","App.js","index.js"],"names":["PARTICLE_COUNT","PARTICLE_SIZE","PARTICLE_COLOR","Particles","particlesRef","useRef","positions","useMemo","positionsArray","Float32Array","i","Math","random","useEffect","current","geometry","setAttribute","THREE","useFrame","rotation","x","y","_jsxs","ref","children","_jsx","attach","color","size","ParticleSystem","Canvas","PROJECTS","name","href","App","style","width","height","backgroundColor","display","justifyContent","alignItems","listStyleType","padding","map","project","index","textDecoration","ReactDOM","render","React","StrictMode","document","getElementById"],"mappings":"qMAKA,MAAMA,EAAiB,IACjBC,EAAgB,IAChBC,EAAiB,UAEvB,SAASC,IACP,MAAMC,EAAeC,mBAGfC,EAAYC,mBAAQ,KACxB,MAAMC,EAAiB,IAAIC,aAA8B,EAAjBT,GACxC,IAAK,IAAIU,EAAI,EAAGA,EAAIV,EAAgBU,IAClCF,EAAmB,EAAJE,GAAiC,IAAvBC,KAAKC,SAAW,IACzCJ,EAAmB,EAAJE,EAAQ,GAA6B,IAAvBC,KAAKC,SAAW,IAC7CJ,EAAmB,EAAJE,EAAQ,GAA6B,IAAvBC,KAAKC,SAAW,IAE/C,OAAOJ,CAAc,GACpB,IAcH,OAZAK,qBAAU,KACRT,EAAaU,QAAQC,SAASC,aAC5B,WACA,IAAIC,kBAAsBX,EAAW,GACtC,GACA,CAACA,IAEJY,aAAS,KACPd,EAAaU,QAAQK,SAASC,GAAK,KACnChB,EAAaU,QAAQK,SAASE,GAAK,IAAK,IAIxCC,eAAA,UAAQC,IAAKnB,EAAaoB,SAAA,CACxBC,cAAA,kBAAgBC,OAAO,aACvBD,cAAA,kBAAgBC,OAAO,WAAWC,MAAOzB,EAAgB0B,KAAM3B,MAGrE,CAUe4B,MARf,WACE,OACEJ,cAACK,IAAM,CAAAN,SACLC,cAACtB,EAAS,KAGhB,EC7CA,MAGM4B,EAAW,CACf,CAAEC,KAAM,YAAaC,KAAM,uBAC3B,CAAED,KAAM,YAAaC,KAAM,wBAwBdC,MArBf,WACE,OACEZ,eAAA,OAAKa,MAAO,CAAEC,MAAO,QAASC,OAAQ,QAASC,gBAV1B,WAU8Dd,SAAA,CACjFC,cAAA,OAAKU,MAAO,CAAEE,OAAQ,OAAQC,gBAVf,SAU+Cd,SAC5DC,cAACI,EAAc,MAEjBJ,cAAA,OAAKU,MAAO,CAAEE,OAAQ,OAAQE,QAAS,OAAQC,eAAgB,SAAUC,WAAY,UAAWjB,SAC9FC,cAAA,MAAIU,MAAO,CAAEO,cAAe,OAAQC,QAAS,GAAInB,SAC9CO,EAASa,KAAI,CAACC,EAASC,IACtBrB,cAAA,MAAAD,SACEC,cAAA,KAAGQ,KAAMY,EAAQZ,KAAME,MAAO,CAAER,MAhB3B,UAgB8CoB,eAAgB,QAASvB,SACzEqB,EAAQb,QAFJc,WAUrB,EC3BAE,IAASC,OACPxB,cAACyB,IAAMC,WAAU,CAAA3B,SACfC,cAACS,EAAG,MAENkB,SAASC,eAAe,Q","file":"static/js/main.970a0125.chunk.js","sourcesContent":["import React, { useRef, useEffect, useMemo } from 'react';\r\nimport { Canvas, useFrame } from '@react-three/fiber';\r\nimport * as THREE from 'three';\r\n\r\n// Define all variables at the top for easy adjustments\r\nconst PARTICLE_COUNT = 10000; // Number of particles\r\nconst PARTICLE_SIZE = 0.05; // Size of each particle\r\nconst PARTICLE_COLOR = \"#00ffcc\"; // Color of the particles\r\n\r\nfunction Particles() {\r\n  const particlesRef = useRef();\r\n\r\n  // Memoize the positions array to avoid unnecessary recalculations\r\n  const positions = useMemo(() => {\r\n    const positionsArray = new Float32Array(PARTICLE_COUNT * 3);\r\n    for (let i = 0; i < PARTICLE_COUNT; i++) {\r\n      positionsArray[i * 3] = (Math.random() - 0.5) * 10;\r\n      positionsArray[i * 3 + 1] = (Math.random() - 0.5) * 10;\r\n      positionsArray[i * 3 + 2] = (Math.random() - 0.5) * 10;\r\n    }\r\n    return positionsArray;\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    particlesRef.current.geometry.setAttribute(\r\n      'position',\r\n      new THREE.BufferAttribute(positions, 3)\r\n    );\r\n  }, [positions]);\r\n\r\n  useFrame(() => {\r\n    particlesRef.current.rotation.x += 0.001;\r\n    particlesRef.current.rotation.y += 0.001;\r\n  });\r\n\r\n  return (\r\n    <points ref={particlesRef}>\r\n      <bufferGeometry attach=\"geometry\" />\r\n      <pointsMaterial attach=\"material\" color={PARTICLE_COLOR} size={PARTICLE_SIZE} />\r\n    </points>\r\n  );\r\n}\r\n\r\nfunction ParticleSystem() {\r\n  return (\r\n    <Canvas>\r\n      <Particles />\r\n    </Canvas>\r\n  );\r\n}\r\n\r\nexport default ParticleSystem;\r\n","import React from 'react';\nimport ParticleSystem from './ParticleSystem';\n\n// Define all variables at the top for easy adjustments\nconst BACKGROUND_COLOR = '#1c1c1c'; // Background color of the entire app\nconst HEADER_COLOR = 'black'; // Background color of the header\nconst LINK_COLOR = '#00ffcc'; // Color of the links\nconst PROJECTS = [\n  { name: 'Project 1', href: 'project1/index.html' },\n  { name: 'Project 2', href: 'project2/index.html' },\n]; // List of projects\n\nfunction App() {\n  return (\n    <div style={{ width: '100vw', height: '100vh', backgroundColor: BACKGROUND_COLOR }}>\n      <div style={{ height: '50vh', backgroundColor: HEADER_COLOR }}>\n        <ParticleSystem />\n      </div>\n      <div style={{ height: '50vh', display: 'flex', justifyContent: 'center', alignItems: 'center' }}>\n        <ul style={{ listStyleType: 'none', padding: 0 }}>\n          {PROJECTS.map((project, index) => (\n            <li key={index}>\n              <a href={project.href} style={{ color: LINK_COLOR, textDecoration: 'none' }}>\n                {project.name}\n              </a>\n            </li>\n          ))}\n        </ul>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';  // Ensure you have an App component\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}